@using System.Web.UI.WebControls
@model StockManagement.Models.EntityModels.StockInDetail

@{
    ViewBag.Title = "Create Stock";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <h2 class="wow fadeInDown">Create Stock</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="wow fadeInDown">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
        </div>

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group wow fadeInDown">
                @Html.LabelFor(model => model.StockIn.StockDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StockIn.StockDate, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss"), id = "stockDate" } })
                    @Html.ValidationMessageFor(model => model.StockIn.StockDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group wow fadeInDown">
                @Html.LabelFor(model => model.StockIn.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StockIn.Description, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "description", id = "description" } })
                    @Html.ValidationMessageFor(model => model.StockIn.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            <hr />
            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group wow fadeInDown">
                @Html.LabelFor(model => model.StockInId, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("StockInId", null, htmlAttributes: new { @class = "form-control", id = "stockInId" })
                    @Html.ValidationMessageFor(model => model.StockInId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group wow fadeInDown">
                @Html.LabelFor(model => model.ProductId, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control", id = "productName" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group wow fadeInDown">
                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control",PlaceHolder="qty", id = "quantity" } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group wow fadeInDown">
                <div class="col-md-offset-2 col-md-10">
                    <input type="reset" class="btn btn-danger" data-dismiss="modal"/>&nbsp;
                    <input id="addToList" type="button" value="Add To List" class="btn btn-success"/>
                </div>
            </div>
            <hr/>
            <div class="form-group wow fadeInDown">
                <div class="col-md-offset-2 col-md-10">
                    <table id="detailsTable" class="table table-bordered ">
                        <thead>
                        <tr>
                            <th style="width: 5%">SL</th>
                            <th style="width: 40%">Description</th>
                            <th style="width: 35%">Product Name</th>
                            <th style="width: 10%">Quantity</th>
                            <th style="width: 10%">Action</th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

            </div>
            <div class="form-group wow fadeInDown">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="reset" class="btn btn-danger" data-dismiss="detailsTableBody" />&nbsp;*@
                    <input id="saveOrder" type="submit" value="Save Stock Item" class="btn btn-warning" />
                </div>
            </div>
        </div>
    }
    @section scripts{
        <script>
            //Show Modal.
            function addNewOrder() {
                $("#newOrderModal").modal();
                
            }
            var slNo = 0;
            //Add Multiple Order.
            $("#addToList").click(function (e) {
                e.preventDefault();
                
                if ($.trim($("#productName").val()) == "" || $.trim($("#quantity").val()) == "")return;
                slNo++;
                var sl =slNo ,
                    descriptions = $("#description").val(),
                    productName = $("#productName").val(),
                    quantity = $("#quantity").val(),
                    detailsTableBody = $("#detailsTable tbody");

                var productItem = '<tr><td>'+sl+'</td><td>' + descriptions + '</td><td>' + productName + '</td><td>' + quantity + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';
                detailsTableBody.append(productItem);
                clearItem();
            });

            //After Add A New Order In The List, Clear Clean The Form For Add More Order.
            function clearItem() {
                $("#description").val('');
                $("#productName").val('');
                $("#quantity").val('');
            }

            // After Add A New Order In The List, If You Want, You Can Remove It.
            $(document).on('click', 'a.deleteItem', function (e) {
                e.preventDefault();
                var $self = $(this);
                if ($(this).attr('data-itemId') == "0") {
                    $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                        $(this).remove();
                    });
                }
            });
           
            //After Click Save Button Pass All Data View To Controller For Save Database
            function saveOrder(data) {
                return $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: "/StockInDetails/Create",
                    data: data,
                    success: function (result) {
                        alert(result);
                        location.reload();
                    },
                    error: function () {
                        alert("Error! can't send to controller ");
                    }
                });
            }

            //Collect Multiple Order List For Pass To Controller
            $("#saveOrder").click(function (e) {
                e.preventDefault();

                var orderArr = [];
                orderArr.length = 0;

                $.each($("#detailsTable tbody tr"), function () {
                    orderArr.push({
                        productName: $(this).find('td:eq(2)').html(),
                        quantity: $(this).find('td:eq(3)').html()
                       
                    });
                });


                var data = JSON.stringify({
                    date: $("#stockDate").val(),
                    description: $("#description").val(),
                    stock: orderArr
                });

                $.when(saveOrder(data)).then(function (response) {
                    console.log(response);
                }).fail(function (err) {
                    console.log(err);
                });
            });
        </script>
    }
